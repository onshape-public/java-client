/*
 * Onshape REST API
 * The Onshape REST API consumed by all client. # Authorization The simplest way to authorize and enable the **Try it out** functionality is to sign in to Onshape and use the current session. The **Authorize** button enables other authorization techniques. To ensure the current session isn't used when trying other authentication techniques, make sure to remove the Onshape cookie as per the instructions for your particular browser. Alternatively, a private or incognito window may be used. Here's [how to remove a specific cookie on Chrome](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site). - **Current Session** authorization is enabled by default if the browser is already signed in to [Onshape](/). - **OAuth2** authorization uses an Onshape OAuth2 app created on the [Onshape Developer Portal](https://dev-portal.onshape.com/oauthApps). The redirect URL field should include `https://cad.onshape.com/glassworks/explorer/oauth2-redirect.html`. - **API Key** authorization using basic authentication is also available. The keys can be generated in the [Onshape Developer Portal](https://dev-portal.onshape.com/keys). In the authentication dialog, enter the access key in the `Username` field, and enter the secret key in the `Password` field. Basic authentication should only be used during the development process since sharing API Keys provides the same level of access as a username and password.
 *
 * The version of the OpenAPI document: 1.147.4893-d7846311aebf
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.net.URI;
import org.openapitools.client.model.BTCompanySummaryInfo;
import org.openapitools.client.model.BTUserBasicSummaryInfo;
import org.openapitools.client.model.BTUserSummaryInfo;
import org.openapitools.client.model.BTUserSummaryInfoAllOf;
import org.openapitools.client.model.GlobalPermissionInfo;
import org.threeten.bp.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for BTUserSummaryInfo
 */
public class BTUserSummaryInfoTest {
    private final BTUserSummaryInfo model = new BTUserSummaryInfo();

    /**
     * Model tests for BTUserSummaryInfo
     */
    @Test
    public void testBTUserSummaryInfo() {
        // TODO: test BTUserSummaryInfo
    }

    /**
     * Test the property 'href'
     */
    @Test
    public void hrefTest() {
        // TODO: test href
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'image'
     */
    @Test
    public void imageTest() {
        // TODO: test image
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'viewRef'
     */
    @Test
    public void viewRefTest() {
        // TODO: test viewRef
    }

    /**
     * Test the property 'company'
     */
    @Test
    public void companyTest() {
        // TODO: test company
    }

    /**
     * Test the property 'documentationName'
     */
    @Test
    public void documentationNameTest() {
        // TODO: test documentationName
    }

    /**
     * Test the property 'documentationNameOverride'
     */
    @Test
    public void documentationNameOverrideTest() {
        // TODO: test documentationNameOverride
    }

    /**
     * Test the property 'email'
     */
    @Test
    public void emailTest() {
        // TODO: test email
    }

    /**
     * Test the property 'firstName'
     */
    @Test
    public void firstNameTest() {
        // TODO: test firstName
    }

    /**
     * Test the property 'globalPermissions'
     */
    @Test
    public void globalPermissionsTest() {
        // TODO: test globalPermissions
    }

    /**
     * Test the property 'isGuest'
     */
    @Test
    public void isGuestTest() {
        // TODO: test isGuest
    }

    /**
     * Test the property 'isLight'
     */
    @Test
    public void isLightTest() {
        // TODO: test isLight
    }

    /**
     * Test the property 'lastLoginTime'
     */
    @Test
    public void lastLoginTimeTest() {
        // TODO: test lastLoginTime
    }

    /**
     * Test the property 'lastName'
     */
    @Test
    public void lastNameTest() {
        // TODO: test lastName
    }

    /**
     * Test the property 'personalMessageAllowed'
     */
    @Test
    public void personalMessageAllowedTest() {
        // TODO: test personalMessageAllowed
    }

    /**
     * Test the property 'source'
     */
    @Test
    public void sourceTest() {
        // TODO: test source
    }

}
