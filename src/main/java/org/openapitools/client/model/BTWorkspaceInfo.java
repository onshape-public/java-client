/*
 * Onshape REST API
 * The Onshape REST API consumed by all client. # Authorization The simplest way to authorize and enable the **Try it out** functionality is to sign in to Onshape and use the current session. The **Authorize** button enables other authorization techniques. To ensure the current session isn't used when trying other authentication techniques, make sure to remove the Onshape cookie as per the instructions for your particular browser. Alternatively, a private or incognito window may be used. Here's [how to remove a specific cookie on Chrome](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site). - **Current Session** authorization is enabled by default if the browser is already signed in to [Onshape](/). - **OAuth2** authorization uses an Onshape OAuth2 app created on the [Onshape Developer Portal](https://dev-portal.onshape.com/oauthApps). The redirect URL field should include `https://cad.onshape.com/glassworks/explorer/oauth2-redirect.html`. - **API Key** authorization using basic authentication is also available. The keys can be generated in the [Onshape Developer Portal](https://dev-portal.onshape.com/keys). In the authentication dialog, enter the access key in the `Username` field, and enter the secret key in the `Password` field. Basic authentication should only be used during the development process since sharing API Keys provides the same level of access as a username and password.
 *
 * The version of the OpenAPI document: 1.147.4893-d7846311aebf
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.net.URI;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.BTThumbnailInfo;
import org.openapitools.client.model.BTUserBasicSummaryInfo;
import org.openapitools.client.model.BTVersionInfo;
import org.threeten.bp.OffsetDateTime;

/**
 * BTWorkspaceInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-18T10:48:36.222032-04:00[America/New_York]")
public class BTWorkspaceInfo {
  public static final String SERIALIZED_NAME_CAN_DELETE = "canDelete";
  @SerializedName(SERIALIZED_NAME_CAN_DELETE)
  private Boolean canDelete;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_CREATOR = "creator";
  @SerializedName(SERIALIZED_NAME_CREATOR)
  private BTUserBasicSummaryInfo creator;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DOCUMENT_ID = "documentId";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_ID)
  private String documentId;

  public static final String SERIALIZED_NAME_HREF = "href";
  @SerializedName(SERIALIZED_NAME_HREF)
  private URI href;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IS_READ_ONLY = "isReadOnly";
  @SerializedName(SERIALIZED_NAME_IS_READ_ONLY)
  private Boolean isReadOnly;

  public static final String SERIALIZED_NAME_LAST_MODIFIER = "lastModifier";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIER)
  private BTUserBasicSummaryInfo lastModifier;

  public static final String SERIALIZED_NAME_MICROVERSION = "microversion";
  @SerializedName(SERIALIZED_NAME_MICROVERSION)
  private String microversion;

  public static final String SERIALIZED_NAME_MODIFIED_AT = "modifiedAt";
  @SerializedName(SERIALIZED_NAME_MODIFIED_AT)
  private OffsetDateTime modifiedAt;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OVERRIDE_DATE = "overrideDate";
  @SerializedName(SERIALIZED_NAME_OVERRIDE_DATE)
  private OffsetDateTime overrideDate;

  public static final String SERIALIZED_NAME_PARENT = "parent";
  @SerializedName(SERIALIZED_NAME_PARENT)
  private String parent;

  public static final String SERIALIZED_NAME_PARENTS = "parents";
  @SerializedName(SERIALIZED_NAME_PARENTS)
  private List<BTVersionInfo> parents = null;

  public static final String SERIALIZED_NAME_THUMBNAIL = "thumbnail";
  @SerializedName(SERIALIZED_NAME_THUMBNAIL)
  private BTThumbnailInfo thumbnail;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_VIEW_REF = "viewRef";
  @SerializedName(SERIALIZED_NAME_VIEW_REF)
  private URI viewRef;

  public BTWorkspaceInfo() { 
  }

  public BTWorkspaceInfo canDelete(Boolean canDelete) {
    
    this.canDelete = canDelete;
    return this;
  }

   /**
   * Get canDelete
   * @return canDelete
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getCanDelete() {
    return canDelete;
  }


  public void setCanDelete(Boolean canDelete) {
    this.canDelete = canDelete;
  }


  public BTWorkspaceInfo createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public BTWorkspaceInfo creator(BTUserBasicSummaryInfo creator) {
    
    this.creator = creator;
    return this;
  }

   /**
   * Get creator
   * @return creator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BTUserBasicSummaryInfo getCreator() {
    return creator;
  }


  public void setCreator(BTUserBasicSummaryInfo creator) {
    this.creator = creator;
  }


  public BTWorkspaceInfo description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public BTWorkspaceInfo documentId(String documentId) {
    
    this.documentId = documentId;
    return this;
  }

   /**
   * Get documentId
   * @return documentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDocumentId() {
    return documentId;
  }


  public void setDocumentId(String documentId) {
    this.documentId = documentId;
  }


  public BTWorkspaceInfo href(URI href) {
    
    this.href = href;
    return this;
  }

   /**
   * Get href
   * @return href
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public URI getHref() {
    return href;
  }


  public void setHref(URI href) {
    this.href = href;
  }


  public BTWorkspaceInfo id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public BTWorkspaceInfo isReadOnly(Boolean isReadOnly) {
    
    this.isReadOnly = isReadOnly;
    return this;
  }

   /**
   * Get isReadOnly
   * @return isReadOnly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsReadOnly() {
    return isReadOnly;
  }


  public void setIsReadOnly(Boolean isReadOnly) {
    this.isReadOnly = isReadOnly;
  }


  public BTWorkspaceInfo lastModifier(BTUserBasicSummaryInfo lastModifier) {
    
    this.lastModifier = lastModifier;
    return this;
  }

   /**
   * Get lastModifier
   * @return lastModifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BTUserBasicSummaryInfo getLastModifier() {
    return lastModifier;
  }


  public void setLastModifier(BTUserBasicSummaryInfo lastModifier) {
    this.lastModifier = lastModifier;
  }


  public BTWorkspaceInfo microversion(String microversion) {
    
    this.microversion = microversion;
    return this;
  }

   /**
   * Get microversion
   * @return microversion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMicroversion() {
    return microversion;
  }


  public void setMicroversion(String microversion) {
    this.microversion = microversion;
  }


  public BTWorkspaceInfo modifiedAt(OffsetDateTime modifiedAt) {
    
    this.modifiedAt = modifiedAt;
    return this;
  }

   /**
   * Get modifiedAt
   * @return modifiedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getModifiedAt() {
    return modifiedAt;
  }


  public void setModifiedAt(OffsetDateTime modifiedAt) {
    this.modifiedAt = modifiedAt;
  }


  public BTWorkspaceInfo name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public BTWorkspaceInfo overrideDate(OffsetDateTime overrideDate) {
    
    this.overrideDate = overrideDate;
    return this;
  }

   /**
   * Get overrideDate
   * @return overrideDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getOverrideDate() {
    return overrideDate;
  }


  public void setOverrideDate(OffsetDateTime overrideDate) {
    this.overrideDate = overrideDate;
  }


  public BTWorkspaceInfo parent(String parent) {
    
    this.parent = parent;
    return this;
  }

   /**
   * Get parent
   * @return parent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getParent() {
    return parent;
  }


  public void setParent(String parent) {
    this.parent = parent;
  }


  public BTWorkspaceInfo parents(List<BTVersionInfo> parents) {
    
    this.parents = parents;
    return this;
  }

  public BTWorkspaceInfo addParentsItem(BTVersionInfo parentsItem) {
    if (this.parents == null) {
      this.parents = new ArrayList<BTVersionInfo>();
    }
    this.parents.add(parentsItem);
    return this;
  }

   /**
   * Get parents
   * @return parents
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<BTVersionInfo> getParents() {
    return parents;
  }


  public void setParents(List<BTVersionInfo> parents) {
    this.parents = parents;
  }


  public BTWorkspaceInfo thumbnail(BTThumbnailInfo thumbnail) {
    
    this.thumbnail = thumbnail;
    return this;
  }

   /**
   * Get thumbnail
   * @return thumbnail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BTThumbnailInfo getThumbnail() {
    return thumbnail;
  }


  public void setThumbnail(BTThumbnailInfo thumbnail) {
    this.thumbnail = thumbnail;
  }


  public BTWorkspaceInfo type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public BTWorkspaceInfo viewRef(URI viewRef) {
    
    this.viewRef = viewRef;
    return this;
  }

   /**
   * Get viewRef
   * @return viewRef
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public URI getViewRef() {
    return viewRef;
  }


  public void setViewRef(URI viewRef) {
    this.viewRef = viewRef;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BTWorkspaceInfo btWorkspaceInfo = (BTWorkspaceInfo) o;
    return Objects.equals(this.canDelete, btWorkspaceInfo.canDelete) &&
        Objects.equals(this.createdAt, btWorkspaceInfo.createdAt) &&
        Objects.equals(this.creator, btWorkspaceInfo.creator) &&
        Objects.equals(this.description, btWorkspaceInfo.description) &&
        Objects.equals(this.documentId, btWorkspaceInfo.documentId) &&
        Objects.equals(this.href, btWorkspaceInfo.href) &&
        Objects.equals(this.id, btWorkspaceInfo.id) &&
        Objects.equals(this.isReadOnly, btWorkspaceInfo.isReadOnly) &&
        Objects.equals(this.lastModifier, btWorkspaceInfo.lastModifier) &&
        Objects.equals(this.microversion, btWorkspaceInfo.microversion) &&
        Objects.equals(this.modifiedAt, btWorkspaceInfo.modifiedAt) &&
        Objects.equals(this.name, btWorkspaceInfo.name) &&
        Objects.equals(this.overrideDate, btWorkspaceInfo.overrideDate) &&
        Objects.equals(this.parent, btWorkspaceInfo.parent) &&
        Objects.equals(this.parents, btWorkspaceInfo.parents) &&
        Objects.equals(this.thumbnail, btWorkspaceInfo.thumbnail) &&
        Objects.equals(this.type, btWorkspaceInfo.type) &&
        Objects.equals(this.viewRef, btWorkspaceInfo.viewRef);
  }

  @Override
  public int hashCode() {
    return Objects.hash(canDelete, createdAt, creator, description, documentId, href, id, isReadOnly, lastModifier, microversion, modifiedAt, name, overrideDate, parent, parents, thumbnail, type, viewRef);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BTWorkspaceInfo {\n");
    sb.append("    canDelete: ").append(toIndentedString(canDelete)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    documentId: ").append(toIndentedString(documentId)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isReadOnly: ").append(toIndentedString(isReadOnly)).append("\n");
    sb.append("    lastModifier: ").append(toIndentedString(lastModifier)).append("\n");
    sb.append("    microversion: ").append(toIndentedString(microversion)).append("\n");
    sb.append("    modifiedAt: ").append(toIndentedString(modifiedAt)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    overrideDate: ").append(toIndentedString(overrideDate)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("    parents: ").append(toIndentedString(parents)).append("\n");
    sb.append("    thumbnail: ").append(toIndentedString(thumbnail)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    viewRef: ").append(toIndentedString(viewRef)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

