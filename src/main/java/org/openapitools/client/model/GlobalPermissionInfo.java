/*
 * Onshape REST API
 * The Onshape REST API consumed by all client. # Authorization The simplest way to authorize and enable the **Try it out** functionality is to sign in to Onshape and use the current session. The **Authorize** button enables other authorization techniques. To ensure the current session isn't used when trying other authentication techniques, make sure to remove the Onshape cookie as per the instructions for your particular browser. Alternatively, a private or incognito window may be used. Here's [how to remove a specific cookie on Chrome](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site). - **Current Session** authorization is enabled by default if the browser is already signed in to [Onshape](/). - **OAuth2** authorization uses an Onshape OAuth2 app created on the [Onshape Developer Portal](https://dev-portal.onshape.com/oauthApps). The redirect URL field should include `https://cad.onshape.com/glassworks/explorer/oauth2-redirect.html`. - **API Key** authorization using basic authentication is also available. The keys can be generated in the [Onshape Developer Portal](https://dev-portal.onshape.com/keys). In the authentication dialog, enter the access key in the `Username` field, and enter the secret key in the `Password` field. Basic authentication should only be used during the development process since sharing API Keys provides the same level of access as a username and password.
 *
 * The version of the OpenAPI document: 1.147.4893-d7846311aebf
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * GlobalPermissionInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-18T10:48:36.222032-04:00[America/New_York]")
public class GlobalPermissionInfo {
  public static final String SERIALIZED_NAME_ACCESS_REPORTS = "accessReports";
  @SerializedName(SERIALIZED_NAME_ACCESS_REPORTS)
  private Boolean accessReports;

  public static final String SERIALIZED_NAME_ADMIN_ENTERPRISE = "adminEnterprise";
  @SerializedName(SERIALIZED_NAME_ADMIN_ENTERPRISE)
  private Boolean adminEnterprise;

  public static final String SERIALIZED_NAME_ALLOW_APP_STORE_ACCESS = "allowAppStoreAccess";
  @SerializedName(SERIALIZED_NAME_ALLOW_APP_STORE_ACCESS)
  private Boolean allowAppStoreAccess;

  public static final String SERIALIZED_NAME_ALLOW_PUBLIC_DOCUMENTS_ACCESS = "allowPublicDocumentsAccess";
  @SerializedName(SERIALIZED_NAME_ALLOW_PUBLIC_DOCUMENTS_ACCESS)
  private Boolean allowPublicDocumentsAccess;

  public static final String SERIALIZED_NAME_APPROVE_RELEASES = "approveReleases";
  @SerializedName(SERIALIZED_NAME_APPROVE_RELEASES)
  private Boolean approveReleases;

  public static final String SERIALIZED_NAME_CREATE_CHANGE_ORDERS = "createChangeOrders";
  @SerializedName(SERIALIZED_NAME_CREATE_CHANGE_ORDERS)
  private Boolean createChangeOrders;

  public static final String SERIALIZED_NAME_CREATE_CHANGE_REQUESTS = "createChangeRequests";
  @SerializedName(SERIALIZED_NAME_CREATE_CHANGE_REQUESTS)
  private Boolean createChangeRequests;

  public static final String SERIALIZED_NAME_CREATE_DOCUMENTS_IN_ROOT = "createDocumentsInRoot";
  @SerializedName(SERIALIZED_NAME_CREATE_DOCUMENTS_IN_ROOT)
  private Boolean createDocumentsInRoot;

  public static final String SERIALIZED_NAME_CREATE_PROJECT = "createProject";
  @SerializedName(SERIALIZED_NAME_CREATE_PROJECT)
  private Boolean createProject;

  public static final String SERIALIZED_NAME_CREATE_RELEASES = "createReleases";
  @SerializedName(SERIALIZED_NAME_CREATE_RELEASES)
  private Boolean createReleases;

  public static final String SERIALIZED_NAME_DELETE_PERMANENTLY = "deletePermanently";
  @SerializedName(SERIALIZED_NAME_DELETE_PERMANENTLY)
  private Boolean deletePermanently;

  public static final String SERIALIZED_NAME_MANAGE_GUEST_USERS = "manageGuestUsers";
  @SerializedName(SERIALIZED_NAME_MANAGE_GUEST_USERS)
  private Boolean manageGuestUsers;

  public static final String SERIALIZED_NAME_MANAGE_NON_GEOMETRIC_ITEMS = "manageNonGeometricItems";
  @SerializedName(SERIALIZED_NAME_MANAGE_NON_GEOMETRIC_ITEMS)
  private Boolean manageNonGeometricItems;

  public static final String SERIALIZED_NAME_MANAGE_RBAC = "manageRbac";
  @SerializedName(SERIALIZED_NAME_MANAGE_RBAC)
  private Boolean manageRbac;

  public static final String SERIALIZED_NAME_MANAGE_USERS = "manageUsers";
  @SerializedName(SERIALIZED_NAME_MANAGE_USERS)
  private Boolean manageUsers;

  public static final String SERIALIZED_NAME_MANAGE_WORKFLOWS = "manageWorkflows";
  @SerializedName(SERIALIZED_NAME_MANAGE_WORKFLOWS)
  private Boolean manageWorkflows;

  public static final String SERIALIZED_NAME_SHARE_FOR_ANONYMOUS_ACCESS = "shareForAnonymousAccess";
  @SerializedName(SERIALIZED_NAME_SHARE_FOR_ANONYMOUS_ACCESS)
  private Boolean shareForAnonymousAccess;

  public static final String SERIALIZED_NAME_TRANSFER_DOCUMENTS_FROM_ENTERPRISE = "transferDocumentsFromEnterprise";
  @SerializedName(SERIALIZED_NAME_TRANSFER_DOCUMENTS_FROM_ENTERPRISE)
  private Boolean transferDocumentsFromEnterprise;

  public static final String SERIALIZED_NAME_VIEW_CHANGE_ORDERS = "viewChangeOrders";
  @SerializedName(SERIALIZED_NAME_VIEW_CHANGE_ORDERS)
  private Boolean viewChangeOrders;

  public static final String SERIALIZED_NAME_VIEW_CHANGE_REQUESTS = "viewChangeRequests";
  @SerializedName(SERIALIZED_NAME_VIEW_CHANGE_REQUESTS)
  private Boolean viewChangeRequests;

  public GlobalPermissionInfo() { 
  }

  public GlobalPermissionInfo accessReports(Boolean accessReports) {
    
    this.accessReports = accessReports;
    return this;
  }

   /**
   * Get accessReports
   * @return accessReports
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAccessReports() {
    return accessReports;
  }


  public void setAccessReports(Boolean accessReports) {
    this.accessReports = accessReports;
  }


  public GlobalPermissionInfo adminEnterprise(Boolean adminEnterprise) {
    
    this.adminEnterprise = adminEnterprise;
    return this;
  }

   /**
   * Get adminEnterprise
   * @return adminEnterprise
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAdminEnterprise() {
    return adminEnterprise;
  }


  public void setAdminEnterprise(Boolean adminEnterprise) {
    this.adminEnterprise = adminEnterprise;
  }


  public GlobalPermissionInfo allowAppStoreAccess(Boolean allowAppStoreAccess) {
    
    this.allowAppStoreAccess = allowAppStoreAccess;
    return this;
  }

   /**
   * Get allowAppStoreAccess
   * @return allowAppStoreAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAllowAppStoreAccess() {
    return allowAppStoreAccess;
  }


  public void setAllowAppStoreAccess(Boolean allowAppStoreAccess) {
    this.allowAppStoreAccess = allowAppStoreAccess;
  }


  public GlobalPermissionInfo allowPublicDocumentsAccess(Boolean allowPublicDocumentsAccess) {
    
    this.allowPublicDocumentsAccess = allowPublicDocumentsAccess;
    return this;
  }

   /**
   * Get allowPublicDocumentsAccess
   * @return allowPublicDocumentsAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAllowPublicDocumentsAccess() {
    return allowPublicDocumentsAccess;
  }


  public void setAllowPublicDocumentsAccess(Boolean allowPublicDocumentsAccess) {
    this.allowPublicDocumentsAccess = allowPublicDocumentsAccess;
  }


  public GlobalPermissionInfo approveReleases(Boolean approveReleases) {
    
    this.approveReleases = approveReleases;
    return this;
  }

   /**
   * Get approveReleases
   * @return approveReleases
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getApproveReleases() {
    return approveReleases;
  }


  public void setApproveReleases(Boolean approveReleases) {
    this.approveReleases = approveReleases;
  }


  public GlobalPermissionInfo createChangeOrders(Boolean createChangeOrders) {
    
    this.createChangeOrders = createChangeOrders;
    return this;
  }

   /**
   * Get createChangeOrders
   * @return createChangeOrders
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getCreateChangeOrders() {
    return createChangeOrders;
  }


  public void setCreateChangeOrders(Boolean createChangeOrders) {
    this.createChangeOrders = createChangeOrders;
  }


  public GlobalPermissionInfo createChangeRequests(Boolean createChangeRequests) {
    
    this.createChangeRequests = createChangeRequests;
    return this;
  }

   /**
   * Get createChangeRequests
   * @return createChangeRequests
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getCreateChangeRequests() {
    return createChangeRequests;
  }


  public void setCreateChangeRequests(Boolean createChangeRequests) {
    this.createChangeRequests = createChangeRequests;
  }


  public GlobalPermissionInfo createDocumentsInRoot(Boolean createDocumentsInRoot) {
    
    this.createDocumentsInRoot = createDocumentsInRoot;
    return this;
  }

   /**
   * Get createDocumentsInRoot
   * @return createDocumentsInRoot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getCreateDocumentsInRoot() {
    return createDocumentsInRoot;
  }


  public void setCreateDocumentsInRoot(Boolean createDocumentsInRoot) {
    this.createDocumentsInRoot = createDocumentsInRoot;
  }


  public GlobalPermissionInfo createProject(Boolean createProject) {
    
    this.createProject = createProject;
    return this;
  }

   /**
   * Get createProject
   * @return createProject
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getCreateProject() {
    return createProject;
  }


  public void setCreateProject(Boolean createProject) {
    this.createProject = createProject;
  }


  public GlobalPermissionInfo createReleases(Boolean createReleases) {
    
    this.createReleases = createReleases;
    return this;
  }

   /**
   * Get createReleases
   * @return createReleases
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getCreateReleases() {
    return createReleases;
  }


  public void setCreateReleases(Boolean createReleases) {
    this.createReleases = createReleases;
  }


  public GlobalPermissionInfo deletePermanently(Boolean deletePermanently) {
    
    this.deletePermanently = deletePermanently;
    return this;
  }

   /**
   * Get deletePermanently
   * @return deletePermanently
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getDeletePermanently() {
    return deletePermanently;
  }


  public void setDeletePermanently(Boolean deletePermanently) {
    this.deletePermanently = deletePermanently;
  }


  public GlobalPermissionInfo manageGuestUsers(Boolean manageGuestUsers) {
    
    this.manageGuestUsers = manageGuestUsers;
    return this;
  }

   /**
   * Get manageGuestUsers
   * @return manageGuestUsers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getManageGuestUsers() {
    return manageGuestUsers;
  }


  public void setManageGuestUsers(Boolean manageGuestUsers) {
    this.manageGuestUsers = manageGuestUsers;
  }


  public GlobalPermissionInfo manageNonGeometricItems(Boolean manageNonGeometricItems) {
    
    this.manageNonGeometricItems = manageNonGeometricItems;
    return this;
  }

   /**
   * Get manageNonGeometricItems
   * @return manageNonGeometricItems
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getManageNonGeometricItems() {
    return manageNonGeometricItems;
  }


  public void setManageNonGeometricItems(Boolean manageNonGeometricItems) {
    this.manageNonGeometricItems = manageNonGeometricItems;
  }


  public GlobalPermissionInfo manageRbac(Boolean manageRbac) {
    
    this.manageRbac = manageRbac;
    return this;
  }

   /**
   * Get manageRbac
   * @return manageRbac
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getManageRbac() {
    return manageRbac;
  }


  public void setManageRbac(Boolean manageRbac) {
    this.manageRbac = manageRbac;
  }


  public GlobalPermissionInfo manageUsers(Boolean manageUsers) {
    
    this.manageUsers = manageUsers;
    return this;
  }

   /**
   * Get manageUsers
   * @return manageUsers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getManageUsers() {
    return manageUsers;
  }


  public void setManageUsers(Boolean manageUsers) {
    this.manageUsers = manageUsers;
  }


  public GlobalPermissionInfo manageWorkflows(Boolean manageWorkflows) {
    
    this.manageWorkflows = manageWorkflows;
    return this;
  }

   /**
   * Get manageWorkflows
   * @return manageWorkflows
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getManageWorkflows() {
    return manageWorkflows;
  }


  public void setManageWorkflows(Boolean manageWorkflows) {
    this.manageWorkflows = manageWorkflows;
  }


  public GlobalPermissionInfo shareForAnonymousAccess(Boolean shareForAnonymousAccess) {
    
    this.shareForAnonymousAccess = shareForAnonymousAccess;
    return this;
  }

   /**
   * Get shareForAnonymousAccess
   * @return shareForAnonymousAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getShareForAnonymousAccess() {
    return shareForAnonymousAccess;
  }


  public void setShareForAnonymousAccess(Boolean shareForAnonymousAccess) {
    this.shareForAnonymousAccess = shareForAnonymousAccess;
  }


  public GlobalPermissionInfo transferDocumentsFromEnterprise(Boolean transferDocumentsFromEnterprise) {
    
    this.transferDocumentsFromEnterprise = transferDocumentsFromEnterprise;
    return this;
  }

   /**
   * Get transferDocumentsFromEnterprise
   * @return transferDocumentsFromEnterprise
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getTransferDocumentsFromEnterprise() {
    return transferDocumentsFromEnterprise;
  }


  public void setTransferDocumentsFromEnterprise(Boolean transferDocumentsFromEnterprise) {
    this.transferDocumentsFromEnterprise = transferDocumentsFromEnterprise;
  }


  public GlobalPermissionInfo viewChangeOrders(Boolean viewChangeOrders) {
    
    this.viewChangeOrders = viewChangeOrders;
    return this;
  }

   /**
   * Get viewChangeOrders
   * @return viewChangeOrders
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getViewChangeOrders() {
    return viewChangeOrders;
  }


  public void setViewChangeOrders(Boolean viewChangeOrders) {
    this.viewChangeOrders = viewChangeOrders;
  }


  public GlobalPermissionInfo viewChangeRequests(Boolean viewChangeRequests) {
    
    this.viewChangeRequests = viewChangeRequests;
    return this;
  }

   /**
   * Get viewChangeRequests
   * @return viewChangeRequests
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getViewChangeRequests() {
    return viewChangeRequests;
  }


  public void setViewChangeRequests(Boolean viewChangeRequests) {
    this.viewChangeRequests = viewChangeRequests;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GlobalPermissionInfo globalPermissionInfo = (GlobalPermissionInfo) o;
    return Objects.equals(this.accessReports, globalPermissionInfo.accessReports) &&
        Objects.equals(this.adminEnterprise, globalPermissionInfo.adminEnterprise) &&
        Objects.equals(this.allowAppStoreAccess, globalPermissionInfo.allowAppStoreAccess) &&
        Objects.equals(this.allowPublicDocumentsAccess, globalPermissionInfo.allowPublicDocumentsAccess) &&
        Objects.equals(this.approveReleases, globalPermissionInfo.approveReleases) &&
        Objects.equals(this.createChangeOrders, globalPermissionInfo.createChangeOrders) &&
        Objects.equals(this.createChangeRequests, globalPermissionInfo.createChangeRequests) &&
        Objects.equals(this.createDocumentsInRoot, globalPermissionInfo.createDocumentsInRoot) &&
        Objects.equals(this.createProject, globalPermissionInfo.createProject) &&
        Objects.equals(this.createReleases, globalPermissionInfo.createReleases) &&
        Objects.equals(this.deletePermanently, globalPermissionInfo.deletePermanently) &&
        Objects.equals(this.manageGuestUsers, globalPermissionInfo.manageGuestUsers) &&
        Objects.equals(this.manageNonGeometricItems, globalPermissionInfo.manageNonGeometricItems) &&
        Objects.equals(this.manageRbac, globalPermissionInfo.manageRbac) &&
        Objects.equals(this.manageUsers, globalPermissionInfo.manageUsers) &&
        Objects.equals(this.manageWorkflows, globalPermissionInfo.manageWorkflows) &&
        Objects.equals(this.shareForAnonymousAccess, globalPermissionInfo.shareForAnonymousAccess) &&
        Objects.equals(this.transferDocumentsFromEnterprise, globalPermissionInfo.transferDocumentsFromEnterprise) &&
        Objects.equals(this.viewChangeOrders, globalPermissionInfo.viewChangeOrders) &&
        Objects.equals(this.viewChangeRequests, globalPermissionInfo.viewChangeRequests);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessReports, adminEnterprise, allowAppStoreAccess, allowPublicDocumentsAccess, approveReleases, createChangeOrders, createChangeRequests, createDocumentsInRoot, createProject, createReleases, deletePermanently, manageGuestUsers, manageNonGeometricItems, manageRbac, manageUsers, manageWorkflows, shareForAnonymousAccess, transferDocumentsFromEnterprise, viewChangeOrders, viewChangeRequests);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GlobalPermissionInfo {\n");
    sb.append("    accessReports: ").append(toIndentedString(accessReports)).append("\n");
    sb.append("    adminEnterprise: ").append(toIndentedString(adminEnterprise)).append("\n");
    sb.append("    allowAppStoreAccess: ").append(toIndentedString(allowAppStoreAccess)).append("\n");
    sb.append("    allowPublicDocumentsAccess: ").append(toIndentedString(allowPublicDocumentsAccess)).append("\n");
    sb.append("    approveReleases: ").append(toIndentedString(approveReleases)).append("\n");
    sb.append("    createChangeOrders: ").append(toIndentedString(createChangeOrders)).append("\n");
    sb.append("    createChangeRequests: ").append(toIndentedString(createChangeRequests)).append("\n");
    sb.append("    createDocumentsInRoot: ").append(toIndentedString(createDocumentsInRoot)).append("\n");
    sb.append("    createProject: ").append(toIndentedString(createProject)).append("\n");
    sb.append("    createReleases: ").append(toIndentedString(createReleases)).append("\n");
    sb.append("    deletePermanently: ").append(toIndentedString(deletePermanently)).append("\n");
    sb.append("    manageGuestUsers: ").append(toIndentedString(manageGuestUsers)).append("\n");
    sb.append("    manageNonGeometricItems: ").append(toIndentedString(manageNonGeometricItems)).append("\n");
    sb.append("    manageRbac: ").append(toIndentedString(manageRbac)).append("\n");
    sb.append("    manageUsers: ").append(toIndentedString(manageUsers)).append("\n");
    sb.append("    manageWorkflows: ").append(toIndentedString(manageWorkflows)).append("\n");
    sb.append("    shareForAnonymousAccess: ").append(toIndentedString(shareForAnonymousAccess)).append("\n");
    sb.append("    transferDocumentsFromEnterprise: ").append(toIndentedString(transferDocumentsFromEnterprise)).append("\n");
    sb.append("    viewChangeOrders: ").append(toIndentedString(viewChangeOrders)).append("\n");
    sb.append("    viewChangeRequests: ").append(toIndentedString(viewChangeRequests)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

